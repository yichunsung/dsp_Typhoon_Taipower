# Building Nerual Network Structure
output_layer <- add_layer(xs, 784, 10, activation_function = tf$nn$softmax)
# Building loss error method (cross entropy)
cross_entropy <- tf$reduce_mean(-tf$reduce_sum(ys*tf$log(output_layer),
reduction_indices = 1L))
# Buliding Gradient Descent and learning rate
learning_rate <- 0.1 # Set learning rate = 0.1
train_step_by_GD <- tf$train$GradientDescentOptimizer(learning_rate)$minimize(cross_entropy)
# Session setting
initiz <- tf$global_variables_initializer()
sess <- tf$Session()
sess$run(initiz)
# Training
for (i in 1:1000){
batches <- mnist$train$next_batch(100L)
batch_xs <- batches[[1]]
batch_ys <- batches[[2]]
sess$run(train_step_by_GD, feed_dict = dict(xs = batch_xs, ys = batch_ys))
if(i %% 50 == 0){
sess$run(cross_entropy, feed_dict = dict(xs = batch_xs, ys = batch_ys)) %>% print()
}
}
dim(mnist$train)
mnist$train$images
dim(mnist$train$images)
trainMNIST <- mnist$train$images
View(trainMNIST)
nrow(trainMNIST)
ncol(trainMNIST)
Mnist_train <- read.csv("C:/Machine-Learing-Notebook/data/Digit_Recognizer/train.csv")
View(Mnist_train)
dim(Mnist_train)
Mnist_train <- Mnist_train[-1,]
dim(batch_xs)
Mnist_train <- Mnist_train[,-1]
dim(Mnist_train)
View(Mnist_train)
View(batch_xs)
Matrix_train <- as.matrix(Mnist_train)
dim(Matrix_train)
xy
ys
dim(batch_ys)
View(Matrix_train)
Mnist_train <- read.csv("C:/Machine-Learing-Notebook/data/Digit_Recognizer/train.csv")
head(Mnist_train)
View(batch_ys)
Mnist_train[,1]
Mnist_label <- Mnist_train[,1]
Mnist_train_image <- Mnist_train[,-1]/256
Matrix_Mnist_train_image <- as.matrix(Mnist_train)
head(Matrix_Mnist_train_image)
Matrix_Mnist_train_image <- as.matrix(Mnist_train_image)
Matrix_Mnist_train_image <- as.matrix(Mnist_train_image)
head(Matrix_Mnist_train_image)
View(batch_ys)
c(0:9)
MnistLabel <- data.frame(Mnist_label)
for(i in c(0:9)){
newCol <- ifelse(MnistLabel$Mnist_label == i,
1,
0)
MnistLabel <- cbind(MnistLabel, newCol)
}
View(MnistLabel)
names(MnistLabel)[2:11] <- c(0:9)
Matrix_MNIST_label <- as.matrix(MnistLabel[,-1])
View(Matrix_MNIST_label)
# Building DNN model
## Building layer structure
add_layer <- function(inputs, input_size, output_size, activation_function = "None"){
Weights <- tf$Variable(tf$random_normal(shape(input_size, output_size)))
biases <- tf$Variable(tf$zeros(shape(1, output_size)))
Wx_plus_b <-tf$matmul(inputs, Weights)+biases
if(activation_function == "None"){
outputs <- Wx_plus_b
}else{
outputs <- activation_function(Wx_plus_b)
}
}
# Building placeholder
xs <- tf$placeholder(tf$float32, shape(NULL, 784L))
ys <- tf$placeholder(tf$float32, shape(NULL, 10L))
# Building Nerual Network Structure
output_layer <- add_layer(xs, 784, 10, activation_function = tf$nn$softmax)
# Building loss error method (cross entropy)
cross_entropy <- tf$reduce_mean(-tf$reduce_sum(ys*tf$log(output_layer),
reduction_indices = 1L))
# Buliding Gradient Descent and learning rate
learning_rate <- 0.1 # Set learning rate = 0.1
train_step_by_GD <- tf$train$GradientDescentOptimizer(learning_rate)$minimize(cross_entropy)
# Session setting
initiz <- tf$global_variables_initializer()
sess <- tf$Session()
sess$run(initiz)
# Training
for (i in 1:10){
#batches <- mnist$train$next_batch(100L)
#batch_xs <- batches[[1]]
#batch_ys <- batches[[2]]
sess$run(train_step_by_GD, feed_dict = dict(xs = Matrix_Mnist_train_image, ys = Matrix_MNIST_label))
if(i %% 2 == 0){
sess$run(cross_entropy, feed_dict = dict(xs = Matrix_Mnist_train_image, ys = Matrix_MNIST_label)) %>% print()
}
}
# Session setting
initiz <- tf$global_variables_initializer()
sess <- tf$Session()
sess$run(initiz)
# Training
for (i in 1:1000){
#batches <- mnist$train$next_batch(100L)
#batch_xs <- batches[[1]]
#batch_ys <- batches[[2]]
sess$run(train_step_by_GD, feed_dict = dict(xs = Matrix_Mnist_train_image, ys = Matrix_MNIST_label))
if(i %% 50 == 0){
sess$run(cross_entropy, feed_dict = dict(xs = Matrix_Mnist_train_image, ys = Matrix_MNIST_label)) %>% print()
}
}
correct_prediction <- tf$equal(tf$argmax(y, 1L), tf$argmax(y_, 1L))
accuracy <- tf$reduce_mean(tf$cast(correct_prediction, tf$float32))
sess$run(accuracy,
feed_dict = dict(x = Matrix_Mnist_train_image, y_ = Matrix_MNIST_label))
library(data.table)
trainset <- fread("data/newTrain.csv", encoding = "UTF-8")
#
library(data.table)
setwd("c://comp/dsp_Typhoon_Taipower")
trainset <- fread("data/newTrain.csv", encoding = "UTF-8")
View(trainset)
trainset <- read.csv("data/newTrain.csv")
View(trainset)
setwd("c://comp/dsp_Typhoon_Taipower")
tyList <- read.csv('data/new_cwb_database.csv')
View(tyList)
View(tyList)
View(trainset)
View(ttttest)
trainset <- trainset[-1]
unique(trainset$TYname)
names(trainset)[6] <- "area"
unique(trainset$TYname)
event_ty <- c("SOUDELOR", "dUJUAN", "MATMO", "NEPARTAK", 'MERANTI')
SOUDELOR_df <- subset(tyList, tyList$name == "SOUDELOR")
View(SOUDELOR_df)
SOUDELOR_df <- SOUDELOR_df[, -1]
View(SOUDELOR_df)
SOUDELOR_df <- SOUDELOR_df[, 1]
SOUDELOR_df
SOUDELOR_df <- subset(tyList, tyList$name == "SOUDELOR")
SOUDELOR_df <- SOUDELOR_df[1,]
View(SOUDELOR_df)
SOUDELOR_df <- subset(tyList, tyList$name == "SOUDELOR" & tyList$year == 2015)
SOUDELOR_df$name[1] <- unique(trainset$TYname)[1]
SOUDELOR_df$name[1] <- "soudelor"
SOUDELOR_df$name <- "soudelor"
SOUDELOR_df <- subset(tyList, tyList$name == event_ty)
SOUDELOR_df <- subset(tyList, tyList$name = event_ty)
SOUDELOR_df <- subset(tyList, tyList$name == event_ty)
SOUDELOR_df <- subset(tyList, tyList$name == event_ty[1] || tyList$name == event_ty[2])
View(SOUDELOR_df)
SOUDELOR_df <- subset(tyList, tyList$name == event_ty[1] & tyList$name == event_ty[2])
SOUDELOR_df <- subset(tyList, tyList$name == event_ty[1] && tyList$name == event_ty[2])
SOUDELOR_df <- subset(tyList, tyList$name == event_ty[1])
library(tidyverse)
?select
select(tyList, tyList$name ==event_ty)
select(tyList, tyList$name =="SOUDELOR")
select(tyList, tyList$name :"SOUDELOR")
select(tyList, tyList$name)
select(tyList, .tyList$name)
select(tyList, "name")
select(tyList, "SOUDELOR")
tyList[name == event_ty]
tyList[tyList$name == event_ty]
tyList[tyList$name == "SOUDELOR"]
tyList[tyList$name = "SOUDELOR"]
View(SOUDELOR_df)
event_df <- read.csv('data/event_imfor.csv')
event_df <- read.csv('data/events_imfor.csv')
View(event_df)
unique(trainset$TYname)
event_df <- event_df[c(3:4)]
View(event_df)
event_df <- read.csv('data/events_imfor.csv')
event_df <- event_df[,c(3:4)]
View(event_df)
event_df <- read.csv('data/events_imfor.csv')
event_df <- event_df[c(3:4),]
View(event_df)
event_df <- read.csv('data/events_imfor.csv')
event_df <- event_df[c(3:4, 6:8),]
event_ty <- c("dUJUAN", "SOUDELOR", "MATMO", "NEPARTAK", 'MERANTI')
unique(trainset$TYname)
event_df$Event[5]
event_df$Event[5] <- " meranti&Mal"
event_df$Event[5] <- c("meranti&Mal")
event_df$typhoon_1_size <- c(10, 10, 5, 10, 10)
event_df$typhoon_1_size <- c(0, 0, 0, 0, 5)
View(js)
setwd("c://comp/dsp_Typhoon_Taipower")
trainset <- read.csv("data/newTrain.csv")
tyList <- read.csv('data/new_cwb_database.csv')
event_df <- read.csv('data/events_imfor.csv')
save.image("C:/comp/dsp_Typhoon_Taipower/workspace.RData")
save.image("C:/comp/dsp_Typhoon_Taipower/.RData")
trainset <- trainset[-1]
names(trainset)[6] <- "area"
event_df <- event_df[c(3:4, 6:8),]
View(event_df)
event_df$typhoon_1_size <- c(10, 10, 5, 10, 10)
event_df$typhoon_1_size <- c(0, 0, 0, 0, 5)
View(event_df)
event_df <- read.csv('data/events_imfor.csv')
View(event_df)
event_df <- event_df[c(3:4, 8),]
View(event_df)
event_df <- read.csv('data/events_imfor.csv')
event_df <- event_df[c(3:4, 6:8),]
event_df <- event_df[c(3:4, 6:8), c(1:6, 10)]
View(event_df)
event_df <- read.csv('data/events_imfor.csv')
event_df <- event_df[c(3:4, 6:8), c(1:6, 10)]
View(event_df)
event_df$typhoon_1_size <- c(10, 10, 5, 10, 10)
event_df$typhoon_2_size <- c(0, 0, 0, 0, 5)
event_df$Event[5] <- c("meranti&Mal")
event_df$Event[[5]] <- c("meranti&Mal")
event_df$Event[[5]] <- c("merantiMal")
unique(trainset$TYname)
event_df$Event<- c("dujuan", "soudelor", "matmo", "nepartak",  "merantiMal")
event_df$Event<- c("dujuan", "soudelor", "matmo", "nepartak",  "meranti&Mal")
SOUDELOR_df <- subset(tyList, tyList$name == "soudelor")
View(SOUDELOR_df)
SOUDELOR_df <- subset(tyList, tyList$name == "SOUDELOR")
SOUDELOR_df <- subset(tyList, tyList$name == "SOUDELOR" & tyList$year = 2015)
SOUDELOR_df <- subset(tyList, tyList$name == "SOUDELOR" && tyList$year = 2015)
SOUDELOR_df <- subset(tyList, tyList$name == "SOUDELOR" && tyList$year == 2015)
SOUDELOR_df <- subset(tyList, tyList$name == "SOUDELOR" & tyList$year == 2015)
View(SOUDELOR_df)
SOUDELOR_df$name <- "soudelor"
View(SOUDELOR_df)
SOUDELOR_df %>% as.matrix()
library(magrittr)
SOUDELOR_df %>% as.matrix()
SOUDELOR_df <- subset(tyList, tyList$name == "SOUDELOR" & tyList$year == 2015) %>% as.matrix()
SOUDELOR_df$name <- "soudelor"
SOUDELOR_df <- subset(tyList, tyList$name == "SOUDELOR" & tyList$year == 2015)
SOUDELOR_df$name <- "soudelor"
SOUDELOR_df <- SOUDELOR_df%>% as.matrix()
SOUDELOR_df$name <- event_ty[[2]]
event_ty <- c("dUJUAN", "SOUDELOR", "MATMO", "NEPARTAK", 'MERANTI')
SOUDELOR_df$name <- event_ty[[2]]
SOUDELOR_df <- subset(tyList, tyList$name == "SOUDELOR" & tyList$year == 2015)
SOUDELOR_df$name <- event_ty[[2]]
SOUDELOR_df <- SOUDELOR_df%>% as.matrix()
View(SOUDELOR_df)
SOUDELOR_df <- subset(tyList, tyList$name == "SOUDELOR" & tyList$year == 2015)
SOUDELOR_df$name <- event_ty[[2]]
View(SOUDELOR_df)
SOUDELOR_df$name <- event_ty[2]
View(SOUDELOR_df)
SOUDELOR_df$name <- "soudelor"
View(SOUDELOR_df)
SOUDELOR_df <- subset(tyList, tyList$name == "SOUDELOR" & tyList$year == 2015)
SOUDELOR_df$name <- event_name[2]
event_name <-  c("dujuan", "soudelor", "matmo", "nepartak",  "meranti&Mal")
SOUDELOR_df$name <- event_name[2]
SOUDELOR_df <- SOUDELOR_df%>% as.matrix()
View(SOUDELOR_df)
event_ty[[2]]
SOUDELOR_df <- subset(tyList, tyList$name == event_ty[[2]] & tyList$year == 2015)
View(SOUDELOR_df)
event_df$year[[2]]
SOUDELOR_df <- subset(tyList, tyList$name == event_ty[[2]] & tyList$year == event_df$year[[2]])
View(event_df)
View(SOUDELOR_df)
View(SOUDELOR_df)
SOUDELOR_df$name <- event_name[2]
SOUDELOR_df <- SOUDELOR_df%>% as.matrix()
View(event_df)
typhoon_list <- data.frame()
typhoon_list <- rbind(typhoon_list, SOUDELOR_df)
View(typhoon_list)
typhoon_list <- data.frame()
typhoon_list <- rbind(typhoon_list, SOUDELOR_df)
typhoon_list <- data.frame()
typhoon_list <- rbind(typhoon_list, SOUDELOR_df)
for(i in length(event_ty)){
typhoon_df <- subset(tyList, tyList$name == event_ty[[i]] & tyList$year == event_df$year[[i]])
typhoon_df$name <- event_name[i]
typhoon_df <- typhoon_df %>% as.matrix()
typhoon_list <- rbind(typhoon_list, typhoon_df)
}
typhoon_list <- data.frame()
for(i in length(event_ty)){
typhoon_df <- subset(tyList, tyList$name == event_ty[[i]] & tyList$year == event_df$year[[i]])
typhoon_df$name <- event_name[i]
typhoon_df <- typhoon_df %>% as.matrix()
typhoon_list <- rbind(typhoon_list, typhoon_df)
}
View(typhoon_list)
typhoon_list <- data.frame()
for(i in length(event_ty)){
typhoon_df <- subset(tyList, tyList$name == event_ty[[i]] & tyList$year == event_df$year[[i]])
typhoon_df$name <- event_name[i]
typhoon_df <- typhoon_df %>% as.matrix()
typhoon_list <- rbind(typhoon_list, typhoon_df)
}
View(typhoon_df)
typhoon_list <- rbind(typhoon_list, SOUDELOR_df)
typhoon_list <- data.frame()
for(i in 1:length(event_ty)){
typhoon_df <- subset(tyList, tyList$name == event_ty[[i]] & tyList$year == event_df$year[[i]])
typhoon_df$name <- event_name[i]
typhoon_df <- typhoon_df %>% as.matrix()
typhoon_list <- rbind(typhoon_list, typhoon_df)
}
typhoon_list <- data.frame()
for(i in 1:length(event_ty)){
typhoon_df <- subset(tyList, tyList$name == event_ty[[i]] & tyList$year == event_df$year[[i]])
typhoon_df$name <- event_name[i]
typhoon_df <- typhoon_df %>% as.matrix()
typhoon_list <- rbind(typhoon_list, typhoon_df)
}
typhoon_df <- subset(tyList, tyList$name == "DUJUAN" & tyList$year == event_df$year[[1]])
View(typhoon_df)
typhoon_list <- data.frame()
for(i in 1:length(event_ty)){
typhoon_df <- subset(tyList, tyList$name == event_ty[[i]] & tyList$year == event_df$year[[i]])
#typhoon_df$name <- event_name[i]
typhoon_df <- typhoon_df %>% as.matrix()
typhoon_list <- rbind(typhoon_list, typhoon_df)
}
View(typhoon_list)
View(typhoon_list)
View(typhoon_df)
View(typhoon_list)
View(event_df)
typhoon_list <- data.frame()
for(i in 1:5){
typhoon_df <- subset(tyList, tyList$name == event_ty[[i]] & tyList$year == event_df$year[[i]])
#typhoon_df$name <- event_name[i]
typhoon_df <- typhoon_df %>% as.matrix()
typhoon_list <- rbind(typhoon_list, typhoon_df)
}
View(typhoon_list)
SOUDELOR_df <- subset(tyList, tyList$name == event_ty[[1]] & tyList$year == event_df$year[[1]])
View(SOUDELOR_df)
SOUDELOR_df <- subset(tyList, tyList$name == event_ty[[1]] )& tyList$year == event_df$year[[1]])
SOUDELOR_df <- subset(tyList, tyList$name == event_ty[[1]] )#& tyList$year == event_df$year[[1]])
SOUDELOR_df <- subset(tyList, tyList$name == "dUJUAN" )#& tyList$year == event_df$year[[1]])
SOUDELOR_df <- subset(tyList, tyList$name == "dujuan" )#& tyList$year == event_df$year[[1]])
View(tyList)
typhoon_list <- data.frame()
for(i in 1:5){
typhoon_df <- subset(tyList, tyList$name == event_ty[[i]] & tyList$year == event_df$year[[i]])
#typhoon_df$name <- event_name[i]
typhoon_df <- typhoon_df %>% as.matrix()
typhoon_list <- rbind(typhoon_list, typhoon_df)
}
View(typhoon_list)
event_ty <- c("DUJUAN", "SOUDELOR", "MATMO", "NEPARTAK", 'MERANTI')
typhoon_list <- data.frame()
for(i in 1:5){
typhoon_df <- subset(tyList, tyList$name == event_ty[[i]] & tyList$year == event_df$year[[i]])
#typhoon_df$name <- event_name[i]
typhoon_df <- typhoon_df %>% as.matrix()
typhoon_list <- rbind(typhoon_list, typhoon_df)
}
typhoon_list <- data.frame()
for(i in 1:5){
typhoon_df <- subset(tyList, tyList$name == event_ty[[i]] & tyList$year == event_df$year[[i]])
typhoon_df$name <- event_name[i]
typhoon_df <- typhoon_df %>% as.matrix()
typhoon_list <- rbind(typhoon_list, typhoon_df)
}
View(typhoon_list)
save.image("C:/comp/dsp_Typhoon_Taipower/.RData")
View(event_df)
typhoon_list[-3,]
typhoon_list[,-3]
typhoon_list[-3]
typhoon_list <- typhoon_list[-3]
View(typhoon_list)
View(typhoon_list)
typhoon_list <- typhoon_list[-1:-3]
View(typhoon_list)
names(typhoon_list)[1]
names(typhoon_list)[1] <- "Event"
f_typhoonList <- merge(typhoon_list, evevt_df, all.x = TRUE, all.y = TRUE, by = "Event", sort = FALSE)
f_typhoonList <- merge(typhoon_list, event_df, all.x = TRUE, all.y = TRUE, by = "Event", sort = FALSE)
View(f_typhoonList)
View(trainset)
View(trainset)
names(trainset)[10]
names(trainset)[10] <- "Event"
new_trainSet <- merge(trainset, f_typhoonList, all.x = TRUE, all.y = TRUE, by = "Event", sort = FALSE)
View(new_trainSet)
write.csv(new_trainSet, "data/finial_train.csv")
demo()
haha()
View(new_trainSet)
inputData <- read.csv("data/finial_train.csv")
View(inputData)
inputData <- inputData[-1]
train <- data.frame(
inputData$household,
inputData$maxWind,
inputData$gust,
inputData$life_period,
inputData$center_lowest_pa,
inputData$center_stronger_wind,
inputData$strom_7_R,
inputData$strom_10_R,
inputData$warming_times,
inputData$typhoon_1_size,
inputData$typhoon_2_size
)
View(train)
train <- data.frame(
inputData$household,
inputData$maxWind,
inputData$gust,
inputData$life_period,
inputData$center_lowest_pa,
inputData$center_stronger_wind,
inputData$strom_7_R,
inputData$strom_10_R,
inputData$warming_times,
inputData$typhoon_1_size,
inputData$typhoon_2_size,
inputData$power_failure
)
cor(train)[-12]
cor(train)[-12,]
train[-12,]
train[12,]
train[1,]
train[-1,]
train[,1]
train <- data.frame(
household = inputData$household,
maxWind = inputData$maxWind,
gust = inputData$gust,
life_period = inputData$life_period,
center_lowest_pa = inputData$center_lowest_pa,
center_stronger_wind = inputData$center_stronger_wind,
strom_7_R = inputData$strom_7_R,
strom_10_R = inputData$strom_10_R,
warming_times = inputData$warming_times,
typhoon_1_size = inputData$typhoon_1_size,
typhoon_2_size = inputData$typhoon_2_size,
power_failure = inputData$power_failure
)
mlm <- lm(power_failure ~
household+maxWind+gust+life_period+center_lowest_pa+center_stronger_wind+strom_7_R+strom_10_R+
warming_times+typhoon_1_size+typhoon_2_size, data = train)
summary(mlm)
save.image("C:/comp/dsp_Typhoon_Taipower/.RData")
View(inputData)
test_NH <- read.csv("data/NesatAndHaitang_submit.csv")
View(test_NH)
input_NH <- read.csv("data/NesatAndHaitang_submit.csv")
test_NH <- data.frame(
household = input_NH$household,
maxWind = input_NH$maxWind,
gust = input_NH$gust,
life_period = input_NH$life_period,
center_lowest_pa = input_NH$center_lowest_pa,
center_stronger_wind = input_NH$center_stronger_wind,
strom_7_R = input_NH$strom_7_R,
strom_10_R = input_NH$strom_10_R,
warming_times = input_NH$warming_times,
typhoon_1_size = input_NH$typhoon_1_size,
typhoon_2_size = input_NH$typhoon_2_size,
power_failure = input_NH$power_failure
)
test_NH <- data.frame(
household = input_NH$household,
maxWind = input_NH$maxWind,
gust = input_NH$gust,
life_period = input_NH$life_period,
center_lowest_pa = input_NH$center_lowest_pa,
center_stronger_wind = input_NH$center_stronger_wind,
strom_7_R = input_NH$strom_7_R,
strom_10_R = input_NH$strom_10_R,
warming_times = input_NH$warming_times,
typhoon_1_size = input_NH$typhoon_1_size,
typhoon_2_size = input_NH$typhoon_2_size
)
View(test_NH)
result_NH <- predict(mlm, newdata = test_NH)
result_NH
input_MG <- read.csv("data/Megi_submit.csv")
test_MG <- data.frame(
household = input_MG$household,
maxWind = input_MG$maxWind,
gust = input_MG$gust,
life_period = input_MG$life_period,
center_lowest_pa = input_MG$center_lowest_pa,
center_stronger_wind = input_MG$center_stronger_wind,
strom_7_R = input_MG$strom_7_R,
strom_10_R = input_MG$strom_10_R,
warming_times = input_MG$warming_times,
typhoon_1_size = input_MG$typhoon_1_size,
typhoon_2_size = input_MG$typhoon_2_size
)
result_MG <- predict(mlm, newdata = test_MG)
result_MG
resulit <- data.frame(result_MG, result_NH)
write.csv(resulit, "result/result.csv")
